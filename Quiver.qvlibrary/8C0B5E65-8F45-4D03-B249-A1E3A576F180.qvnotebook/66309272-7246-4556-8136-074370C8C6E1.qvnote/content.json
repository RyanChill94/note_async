{
  "title": "redux 异步方式",
  "cells": [
    {
      "type": "text",
      "data": "1. 最简单的 react-thunk<div>&nbsp; 使dispatch 函数支持函数 实现非常简单<br></div>"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "// redux-thunk\nfunction createThunkMiddleware(extraArgument) {\n  return function (_ref) { //接受middleWare API\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        if (typeof action === 'function') {\n          return action(dispatch, getState, extraArgument);\n        }\n\n        return next(action);\n      };\n    };\n  };\n}\n\nvar thunk = createThunkMiddleware();\nthunk.withExtraArgument = createThunkMiddleware;"
    },
    {
      "type": "text",
      "data": "缺点： 样板代码太多<br>"
    },
    {
      "type": "text",
      "data": "2. redux-promise<div>缺点：无法处理乐观更新<br></div>"
    },
    {
      "type": "text",
      "data": "3. redux-saga<div>key: sideEffect<br><div>缺点：比较难理解</div></div>"
    }
  ]
}