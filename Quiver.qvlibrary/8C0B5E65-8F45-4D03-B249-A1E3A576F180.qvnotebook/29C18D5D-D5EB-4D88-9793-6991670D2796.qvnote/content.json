{
  "title": "React_Top_Level_API",
  "cells": [
    {
      "type": "text",
      "data": "1. React.createElement<br>"
    },
    {
      "type": "text",
      "data": "2. React.cloneElement<div><div>克隆jsx 保留ref 不会丢失ref</div></div><div><pre class=\"gatsby-code-jsx\" style=\"margin: 1rem; padding: 0px; box-sizing: inherit; font-family: source-code-pro, Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; line-height: 20px; white-space: pre-wrap; word-break: break-word; color: rgb(255, 255, 255); font-variant-ligatures: normal; orphans: 2; widows: 2; height: auto !important;\"><code style=\"box-sizing: inherit; font-family: source-code-pro, Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 1em;\">React<span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; box-sizing: inherit; color: rgb(95, 179, 179);\">.</span><span class=\"token function\" style=\"margin: 0px; padding: 0px; box-sizing: inherit; color: rgb(121, 182, 242);\">createElement</span><span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; box-sizing: inherit; color: rgb(95, 179, 179);\">(</span>\n  type<span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; box-sizing: inherit; color: rgb(95, 179, 179);\">,</span>\n  <span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; box-sizing: inherit; color: rgb(95, 179, 179);\">[</span>props<span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; box-sizing: inherit; color: rgb(95, 179, 179);\">]</span><span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; box-sizing: inherit; color: rgb(95, 179, 179);\">,</span>\n  <span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; box-sizing: inherit; color: rgb(95, 179, 179);\">[</span><span class=\"token operator\" style=\"margin: 0px; padding: 0px; box-sizing: inherit; color: rgb(215, 222, 234);\">...</span>children<span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; box-sizing: inherit; color: rgb(95, 179, 179);\">]</span>\n<span class=\"token punctuation\" style=\"margin: 0px; padding: 0px; box-sizing: inherit; color: rgb(95, 179, 179);\">)</span></code></pre></div>"
    },
    {
      "type": "text",
      "data": "3. React.createFactory()<div>&nbsp;如果使用 JSX 一般不会调用</div><div><br></div><div>4. React.isValidElement()</div><div>验证一个对象是否是一个React对象</div><div><br></div><div>5.React.Children</div><div>&nbsp; -forEach map count only(仅有子级 否则报错)</div><div><br></div><div>6.React.Fragment</div><div><br></div><div>7. ForwadRef&nbsp;</div>"
    },
    {
      "type": "text",
      "data": ""
    },
    {
      "type": "text",
      "data": ""
    },
    {
      "type": "text",
      "data": "React-DOM<div><br></div><div>1. Render</div><div><br></div><div>2. unmountComponentAtNode(container)</div><div>在dom元素中移除已经挂载的React组件， 清除相应的时间处理器和state 返回值为是否有组件被移除</div><div><br></div><div>3. findDOMNode(component)</div><div>返回已经挂载组件的dom元素</div><div><br></div><div>4.</div>"
    }
  ]
}