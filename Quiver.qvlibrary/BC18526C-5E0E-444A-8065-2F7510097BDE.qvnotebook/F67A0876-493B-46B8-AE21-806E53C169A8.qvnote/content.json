{
  "title": "deploy.plugin",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "var Client = require('ftp');\nvar client = new Client();\n\n// 待上传的文件\nvar __assets__ = [];\n// 是否已连接\nvar __connected__ = false;\n\nvar __conf__ = null;\n\nfunction uploadFile(startTime) {\n  var file = __assets__.shift();\n  // 没有文件就关闭连接\n  if (!file) return client.end();\n  // 开始上传\n  client.put(file.source, file.remotePath, function(err) {\n    // 本次上传耗时\n    var timming = Date.now() - startTime;\n    if (err) {\n      console.log('error ', err);\n      console.log('upload fail -', file.remotePath);\n    } else {\n      console.log('upload success -', file.remotePath, timming + 'ms');\n    }\n    // 每次上传之后检测下是否还有文件需要上传，如果没有就关闭连接\n    if (__assets__.length === 0) {\n      client.end();\n    } else {\n      uploadFile();\n    }\n  });\n}\n\n// 发起连接\nfunction connect(conf) {\n  if (!__connected__) {\n    client.connect(__conf__);\n  }\n}\n\n// 连接成功\nclient.on('ready', function() {\n  __connected__ = true;\n  uploadFile(Date.now());\n});\n\n// 连接已关闭\nclient.on('close', function() {\n  __connected__ = false;\n  // 连接关闭后，如果发现还有文件需要上传就重新发起连接\n  if (__assets__.length > 0) connect();\n});\n\n/**\n * [deploy description]\n * @param  {Array}   assets  待 deploy 的文件\n * file.source      buffer\n * file.remotePath  path\n */\nfunction deployWithFtp(conf, assets, callback) {\n  __conf__ = conf;\n  __assets__ = __assets__.concat(assets);\n  connect();\n}\n\n\n\nvar path = require('path');\n\n/**\n * [DeployPlugin description]\n * @param {Array} options\n * option.reg \n * option.to \n */\nfunction DeployPlugin(conf, options) {\n  this.conf = conf;\n  this.options = options;\n}\n\nDeployPlugin.prototype.apply = function(compiler) {\n  var conf = this.conf;\n  var options = this.options;\n  compiler.plugin('done', function(stats) {\n    var files = [];\n    var assets = stats.compilation.assets;\n    for (var name in assets) {\n      options.map(function(cfg) {\n        if (cfg.reg.test(name)) {\n          files.push({\n            localPath: name,\n            remotePath: path.join(cfg.to, name),\n            source: new Buffer(assets[name].source(), 'utf-8')\n          });\n        }\n      });\n    }\n    deployWithFtp(conf, files);\n  });\n};\n\n\nmodule.exports = DeployPlugin;\n\n\n\n\n\n\n\n\n\n\n\n"
    }
  ]
}