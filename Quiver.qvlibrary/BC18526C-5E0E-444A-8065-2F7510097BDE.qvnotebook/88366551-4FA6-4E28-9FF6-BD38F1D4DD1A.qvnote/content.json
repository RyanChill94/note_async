{
  "title": "Webpack.dev.js",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "/**\n * node webpack.dev.js\n *        --hot         开启热更新\n *        --uglify      压缩 \n *        --deploy      发布到测试环境，只发送 html 页面到服务器，js, css, img 等静态资源还是使用本地的，\n *        这样就可以在访问测试机时也可以照常使用热替换、自动刷新功能。\n *\n * NODE_ENV=development node build/webpack.dev.js --hot\n * NODE_ENV=development node build/webpack.dev.js --hot --deploy\n * NODE_ENV=production node build/webpack.dev.js --uglify\n */\n\nvar webpack = require('webpack');\nvar WebpackDevServer = require('webpack-dev-server');\nvar config = require('./webpack.config');\nvar DeployPlugin = require('./deploy.plugin');\nvar utils = require('./utils');\n\nvar PORT = 8080;\n// var HOST = utils.getIP();\nvar HOST = \"local.msz.jd.com\";\n //var HOST = \"127.0.0.1\";\n\nvar args = process.argv;\nvar hot = args.indexOf('--hot') > -1;\nvar deploy = args.indexOf('--deploy') > -1;\n\n// 本地环境静态资源路径\nvar localPublicPath = 'http://' + HOST + ':' + PORT + '/';\n\nconfig.output.publicPath = localPublicPath; \nconfig.entry['static/js/lib/vendor'].unshift('webpack-dev-server/client?' + localPublicPath);\n\n// 开启热替换相关设置\nif (hot === true) {\n  config.entry['static/js/lib/vendor'].unshift('webpack/hot/only-dev-server');\n  // 注意这里 loaders[0] 是处理 .js 文件的 loader\n  config.module.loaders[0].loaders.unshift('react-hot-loader');\n  config.plugins.push(new webpack.HotModuleReplacementPlugin());\n}\n\n// 是否发布到测试环境\nif (deploy === true) {\n  // config.plugins.push(\n  //   new DeployPlugin({\n  //     user: '',\n  //     password: '', \n  //     host: '', \n  //     keepalive: 10000000\n  //   }, \n  //   [{reg: /html$/, to: '/xxx/xxx/xxx/app/views/'}])\n  // );\n}\n\n// see http://webpack.github.io/docs/build-performance.html#sourcemaps\n//12846ms 最慢 被压缩文件没有做module处理 不同source map 的组合\n// config.devtool = '#cheap-module-eval-source-map';\n//cheap会不包含列信息，可以提高source map生成效率\n\n//11684ms 被压缩文件没有做module处理 \n// config.devtool = \"#source-map\";\n//9767ms 被压缩文件有做module 编译速度最快。 推荐\nconfig.devtool = \"#eval\";\n//9432ms 被压缩文件有做module\n// config.devtool=\"#cheap-module-eval-source-map\";\n//11482 被压缩文件没有做module处理\n// eval-source-map初始化构建的时候非常的缓慢，但是再次构建和生成文件的时候速度就会加快\n// config.devtool=\"#eval-source-map\";\n\nnew WebpackDevServer(webpack(config), {\n  // https: true,\n  hot: hot,\n  inline: true,\n  compress: true,\n  proxy: {\n        \"/market/**\": {\n            target: 'http://mock.msz.jd.com/',\n            secure: true,\n            changeOrigin: true\n        },\n        \"/m/authority\":{\n          target: localPublicPath +'views/homepage/authority.html',\n          secure: true,         \n          pathRewrite: {\"\\/m[\\/ a-z]*\" : ''},\n          changeOrigin: true\n        },\n          \"/m/tmplogin\":{\n              target: localPublicPath +'views/homepage/tmplogin.html',\n              secure: true,\n              pathRewrite: {\"\\/m[\\/ a-z]*\" : ''},\n              changeOrigin: true\n          },\n        \"/m/*\":{\n          target: localPublicPath +'views/homepage/index.html',\n          secure: true,         \n          changeOrigin: true,\n       \n          pathRewrite: {\"\\/m[\\/ a-z]*\" : ''}\n        },\n        \"/realtime/**\": {\n            target: 'http://mock.msz.jd.com',\n            secure: true,\n            changeOrigin: true\n        },\n        \"/shopstate/**\": {\n            target: 'http://mock.msz.jd.com/',\n            secure: true,\n            changeOrigin: true\n        },\n        \"/user/**\": {\n            target: 'http://mock.msz.jd.com/',\n            secure: true,\n            changeOrigin: true\n        }\n    },\n  // contentBase: \"/views/todos/index.html\",\n  stats: {\n    chunks: false,\n    children: false,\n    colors: true\n  },\n  // watchOptions: {\n  //     // Delay the rebuild after the first change\n  //     aggregateTimeout: 300,\n  //     // Poll using interval (in ms, accepts boolean too)\n  //     poll: 1000\n  //   },\n  // Set this as true if you want to access dev server from arbitrary url.\n  // This is handy if you are using a html5 router.\n  historyApiFallback: true,\n}).listen(PORT, HOST, function() {\n  console.log(localPublicPath);\n});\n\n\n\n"
    }
  ]
}