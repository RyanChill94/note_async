{
  "title": "observer-mode.js",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "var Events = function() {\n \n   var listen, log, obj, one, remove, trigger, __this;\n  \n   obj = {};\n  \n   __this = this;\n  \n   listen = function( key, eventfn ) {  //把简历扔盒子, key就是联系方式.\n  \n     var stack, _ref;  //stack是盒子\n  \n     stack = ( _ref = obj[key] ) != null ? _ref : obj[ key ] = []; // 赋值同时判断\n  \n     return stack.push( eventfn );\n  \n   };\n  \n   one = function( key, eventfn ) {\n  \n     remove( key );\n  \n     return listen( key, eventfn );\n  \n   };\n  \n   remove = function( key ) {\n  \n     var _ref;\n  \n     return ( _ref = obj[key] ) != null ? _ref.length = 0 : void 0;\n  \n   };\n  \n   trigger = function() {  //面试官打电话通知面试者\n  \n     var fn, stack, _i, _len, _ref, key;\n  \n     key = Array.prototype.shift.call( arguments ); // 只取出第一个参数作为event type\n  \n     stack = ( _ref = obj[ key ] ) != null ? _ref : obj[ key ] = [];\n  \n     for ( _i = 0, _len = stack.length; _i < _len; _i++ ) {\n  \n       fn = stack[ _i ];\n  \n       if ( fn.apply( __this,  arguments ) === false) {\n  \n         return false;\n  \n       }\n  \n     }\n  \n     return {\n  \n        listen: listen,\n  \n        one: one,\n  \n        remove: remove,\n  \n        trigger: trigger\n  \n     }\n }"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "//useage\n\nvar MovieCast = Event();\n\n// 订阅者\nMovieCast .listen('play',  function( data ){\n \n   alert ( \"今天是谁的电影\" + data.name );\n \n});\n \n// 发布者\nMovieCast .trigger(  'play',  { 'name': '麻生' }  )"
    }
  ]
}