{
  "title": "big_data.md",
  "cells": [
    {
      "type": "markdown",
      "data": "1. 数据字典 think 获取hive表名 字段名等\n2. 数据查询进行sql操作\n3. 数据仓库架构图\n\n数据使用系统\n    |\n  集市同步\n    |\n  数据仓库\n    |\n  业务系统\n\n4. 数据仓库架构\nBDM buffering data model    缓冲数据层\nFDM fundamental data model  基础数据层\nGDM general data model   通用数据层\naggregative data model   聚合数据层\nDIM 维度数据库  【防止不易变化的数据 省市 订单类型】\nTMP 计算中间库/临时数据库\n\n\n5. 拉链表\n    分区：dp dt end_date\n    dp EXPIRED ACTIVE\n    dt #date# 发生变更的时间\n    使用start_date 和 end_date 进行日期范围控制\n    start_date <= #date# and \n    end_date > #date#\n    如果是active end_data 就是最长日期\n    更新为EXPIRED 之后end_data变为过期日期\n    可以取某日的全量数据快照\n    \n    使用方式 1.查看最新数据 dp=‘active’ 2.查看历史数据 卡时间\n    拉链表分区  ACTIVE EXPIRED HISTORY（历史分区）\n    \n    查历史分区的时候必须已经完成的订单且会有3天左右的延迟\n    ```\n    select * from fdm.fdm_pek_orders_chain where dp in('ACTIVE','HISTORY') and dt>= '2017-10-10'\n    \n    ```    \n    \n    \n6. 增量表(流水表)\n    每天一个分区 dt字段\n    _da 全量表 一般卡其中一天 否则会发生数据重复 dt = sysdate(-1)\n    \n\n7. hive DDL\n类型转换 cast(1 as double )\n元数据信息 定义hive表的结构 储存在关系型数据库\n数据部分 储存在HDFS 分布式文件存储系统\n内部表和外部表 内部表drop的时候会把数据一起删除  而外部表只是将表结构删除 不会将数据删除\n外部表创建的时候多一个 EXTERNAL 关键字\nhive的几种join方式和使用场景 map-side join 和 reduce-side join\nwhere 和 on 的区别  列裁剪 和 分区裁剪\n\n\n8. hive sql 的优化\n优化的根本思想 尽早过滤数据 减少每个阶段的数据量\n减少Job数 map reduce\n解决数据倾斜的问题 任务分布不均匀\n\n列裁剪 只是需要查出需要的数据列 \n区裁剪\n避免笛卡尔积 join的时候写上关联条件\n使用相同的key \n在join之前过滤掉不需要的数据  \n\n优先使用小表去关联大表 join操作符左边的表会被放进内存。使用小表能够有效减少内存溢出\n\n```\nBAD\n\n SELECT a.val ,b.val FROM a LEFT OUTER JOIN b on (a.key = b.key) WHERE \n a.ds = '2009-07-07' AND b.bs = '2009-07-07'\n \nGOOD\n  SELECT x.val,v.val FROM  (select key,val from a where a.ds ='2009-07-07') x\n  LEFT OUTER JOIN\n  (SELECT key,val from b where b.ds = '2009-07-07') y ON x.key = k.key\n```\nmapjoin  适合表比较少的情况  /*+ mapjoin(b) */\nLEFT SEMI JOIN  自动去重\n\n```\n    select a.key,a.value FROM a LEFT SEMI JOIN b on (a.key = b.key)\n```    \n\n---\n \n```sql\nselect * from gdm.gdm_a02_gp_sum where dt >= sysdate(-1) limint 10\n\n\n// 更改列类型或者列名\n                                  【oldName】【newName】[type]\nhive> ALTER TABLE employee CHANGE  name      ename     String;\nhive> ALTER TABLE employee CHANGE salary salary Double;\n\n\n```\n\n### 基础知识补充\n    - hive中的分区partition\n        分区列不是表中的一个实际字段，而是一个或者多个了伪列\n        建表的时候指定好分区列\n        每个分区都有一个独立的文件夹 下面是该分区的所有的数据文件\n    - 数据仓库中表\n        拉链表 还原历史快照\n        流水表 不会对历史数据进行更新 \n        全量表\n        增量快照表\n    "
    }
  ]
}