{
  "title": "safeGet",
  "cells": [
    {
      "type": "text",
      "data": "Q：<div><span style=\"color: rgb(34, 34, 34); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">请你完成一个</span><span style=\"color: rgb(34, 34, 34); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">&nbsp;</span><code style=\"color: rgb(199, 37, 78); orphans: 2; widows: 2; background-color: rgb(249, 242, 244); box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13.5px; padding: 2px 4px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">safeGet</code><span style=\"color: rgb(34, 34, 34); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">&nbsp;</span><span style=\"color: rgb(34, 34, 34); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">函数，可以安全的获取无限多层次的数据，一旦数据不存在不会报错，会返回</span><span style=\"color: rgb(34, 34, 34); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">&nbsp;</span><code style=\"color: rgb(199, 37, 78); orphans: 2; widows: 2; background-color: rgb(249, 242, 244); box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13.5px; padding: 2px 4px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px;\">undefined</code><span style=\"color: rgb(34, 34, 34); font-family: &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">，例如：</span><pre style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14px; padding: 10px; margin-top: 0px; margin-bottom: 20px; line-height: 1.4; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); background-color: rgb(245, 245, 245); border: none; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; font-variant-ligatures: normal; orphans: 2; widows: 2;\"><code class=\"language-javascript hljs\" style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: inherit; padding: 0.5em; color: rgb(68, 68, 68); background-color: rgb(240, 240, 240); border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px; white-space: pre-wrap; display: block; overflow-x: auto;\"><span class=\"hljs-keyword\" style=\"box-sizing: border-box; font-weight: bold;\">var</span> data = { <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">a</span>: { <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">b</span>: { <span class=\"hljs-attr\" style=\"box-sizing: border-box;\">c</span>: <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">'ScriptOJ'</span> } } }\nsafeGet(data, <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">'a.b.c'</span>) <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(136, 136, 136);\">// =&gt; scriptoj</span>\nsafeGet(data, <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">'a.b.c.d'</span>) <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(136, 136, 136);\">// =&gt; 返回 undefined</span>\nsafeGet(data, <span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">'a.b.c.d.e.f.g'</span>) <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(136, 136, 136);\">// =&gt; 返回 undefined</span>\n<span class=\"hljs-built_in\" style=\"box-sizing: border-box; color: rgb(57, 115, 0);\">console</span>.log(<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">'ScriptOJ'</span>) <span class=\"hljs-comment\" style=\"box-sizing: border-box; color: rgb(136, 136, 136);\">// =&gt; 打印 ScriptOJ</span></code></pre></div>"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "// code\n// 超时\nconst safeGet1 = (data, path) => {\n    if (!path) return undefined;\n    const pathArr = path.split(\".\");\n    let temp = data;\n    pathArr.some((v, i) => {\n        temp = temp[v]\n        if (!temp) {\n            return true;\n        }\n    })\n\n    /*\n      while (paths.length) {\n        res = res[paths.shift()]\n        if (!res) return undefined\n    }\n    return res\n    */\n    console.log(temp)\n    return temp\n}\n\n// 改进\nconst safeGet = (data, path) => {\n    if (!path || Object.keys(data).length == 0) return undefined;\n    const pathArr = path.split(\".\");\n    let temp = data;\n    pathArr.some((v, i) => {\n        temp = temp[v]\n        if (!temp) {\n            return true;\n        }\n    })\n    return temp\n}\n\n// 常规\nconst safeGet2 = (data, path) => {\n    let pathArr = path.split('.');\n    let temp = data;\n    for(let i of pathArr) {\n      if(temp[i]) {\n        temp = temp[i]\n      } else {\n        return undefined;\n      }\n    }\n    return temp;\n}\n\n\n// 异常捕捉法..\nconst safeGet3 = (data,path) => {\n    if(!path) return undefined;\n    const arr = path.split(\".\");\n    try{\n        while(arr.length){\n            data = data[arr.shift()];\n        }\n    }catch(e){\n        return undefined;\n    }\n}\n\n// 精简\nconst safeGet4 = (data, path) => {\n    return path.split('.').reduce((d,i)=>{\n      return typeof d == 'undefined' ? d : d[i];\n    },data);\n}\n\nvar data = {\n    a: {\n        b: {\n            c: 'ScriptOJ'\n        }\n    }\n}\nconsole.log(safeGet4(data, 'a.b.c')) // => scriptoj\nconsole.log(safeGet4(data, 'a.b.c.d')) // => 返回 undefined\nconsole.log(safeGet4(data, 'a.b.c.d.e.f.g')) // => 返回 undefined\nconsole.log('ScriptOJ') // => 打印 ScriptOJ\n\n"
    },
    {
      "type": "text",
      "data": "<div>somepoint</div><div>1. for in 循环key值 &nbsp;for...of 循环val值</div><div>2. reduce(cb(),initVal) cb的参数分别是 累计值 当前值 当前下标</div><div><pre class=\"brush: js\" style=\"margin-top: 0px; margin-bottom: 20px; padding: 15px; border-top-width: 0px; border-bottom-width: 0px; border-style: solid; border-color: rgb(63, 135, 166); font-size: 16px; background-color: rgb(238, 238, 238); color: rgb(51, 51, 51); position: relative; font-family: consolas, monaco, &quot;Andale Mono&quot;, monospace; overflow: auto; tab-size: 4; -webkit-hyphens: none; box-sizing: border-box; width: 1007px; max-width: 100%; caret-color: rgb(51, 51, 51); border-right-width: 0px !important; border-left-width: 5px !important; direction: ltr !important;\">[0, 1, 2, 3, 4].reduce(\n&nbsp; function (\n<code style=\"border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; font-family: consolas, &quot;Liberation Mono&quot;, courier, monospace; word-wrap: break-word;\">    accumulator,</code>\n&nbsp;   <code style=\"border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; font-family: consolas, &quot;Liberation Mono&quot;, courier, monospace; word-wrap: break-word;\">currentValue</code>,\n&nbsp;   <code style=\"border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; font-family: consolas, &quot;Liberation Mono&quot;, courier, monospace; word-wrap: break-word;\">currentIndex</code>,\n&nbsp;   array\n  ) {\n    return <code style=\"border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px; font-family: consolas, &quot;Liberation Mono&quot;, courier, monospace; word-wrap: break-word;\">accumulator</code> + currentValue;\n  }\n);</pre></div>"
    }
  ]
}