{
  "title": "DateItemCollection",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "class DateItemCollection {\n    constructor(...args) {\n        // TODO: new DateItem\n        if (args.length === 1 && typeof args[0] === 'number') {\n            this.dateItems = new Array(args[0]);\n        }\n\n        if (args.length === 2) {\n            const [originStartDate, originEndDate] = args;\n            const startDate = new GraceDate(originStartDate),\n                    endDate = new GraceDate(originEndDate);\n\n            if (!(startDate.isValid() && endDate.isValid())) throw new Error('Invalid constructor params.');\n\n            const dayInMilliseconds = 24 * 60 * 60 * 1000; // 一天的毫秒数\n            const dayRange = Math.floor((endDate.getTime() - startDate.getTime()) / dayInMilliseconds) + 1;\n\n            this.dateItems = Array.from({ length: dayRange }, (v, i) => new DateItem(new GraceDate(startDate.getTime() + (dayInMilliseconds * i))));\n        }\n\n        // 设置DateItemCollection.length属性\n        Object.defineProperty(this, 'length', {\n            configurable: false,\n            enumerable: false,\n            get() {\n                return this.dateItems.length;\n            }\n        });\n\n        // 为this.dateItems添加constructor[Symbol.species]属性，使得在调用map、filter等方法时返回DateItemCollection实例\n        Object.defineProperty(this.dateItems.constructor, Symbol.species, {\n            configurable: false,\n            enumerable: false,\n            value: DateItemCollection\n        });\n    }\n}\n\n/**\n * 由于继承原生类型无法很好地编译为ES5代码，使用拷贝Array.prototyped的方法实现\n */\nObject.getOwnPropertyNames(Array.prototype)\n    .filter(prop => prop !== 'constructor' && {}.toString.call(Array.prototype[prop]) === '[object Function]')\n    .forEach(prop => {\n        const { configurable, enumerable } = Object.getOwnPropertyDescriptor(Array.prototype, prop);\n        const desc = {\n            get() {\n                return Array.prototype[prop].bind(this.dateItems);\n            },\n            configurable,\n            enumerable\n        };\n\n        Object.defineProperty(DateItemCollection.prototype, prop, desc);\n    });\n\nexport default DateItemCollection;\n"
    }
  ]
}