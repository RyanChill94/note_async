{
  "title": "Formatter.js",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "\n/**\n * 格式化函数\n * 提供数据格式化服务，目前支持**数字**，**货币**，**日期**，**百分比**的格式化，接受两个参数，输入数据和格式化的pattern，基本规则是 *格式化类型_参数1_参数2* ，pattern详细书写规则如下：\n\n - 数字：number_精度（数字）_是否保留+-号（数字0，1）\n - 货币：currency_货币单位($,￥等)\n - 日期：date_日期的格式  其中日期的格式，支持常见的日期格式yyyy,yy,y,MMMM,MMM,MM,M,dd,d 等等\n - 百分比:percent_精度_是否保留+-号_是否*100\n\n * @param  {[type]} input 输入字符串\n * @param  {[type]} param [description]\n * @return {[type]}       [description]\n */\nvar _dateConfig = {\n    pattern_ymd: 'yyyy-MM-dd',\n    pattern_ym: 'yyyy-MM',\n    pattern_md: 'MM-dd',\n    pattern_week: ['SUN','MON','TUE','WED','THU','FRI','SAT'],\n    pattern_ymd_cn: 'yyyy年MM月dd日',\n    pattern_ym_cn: 'yyyy年MM月',\n    pattern_md_cn: 'MM月dd日',\n    pattern_week_cn: ['日','一','二','三','四','五','六'],\n\n    datetime_mm: 6e4,\n    datetime_hh: 36e5,\n    datetime_dd: 864e5\n};\n\nexport default function(input, param){\n\n\n        var tmpDateFormat = \"yyyy-MM-dd\";\n        var tmpCurrency = \"￥\";\n        var tmpPercentCharactor = \"%\";\n\n\n         var formatDate = function(_date, _pattern){\n            _date = _date||new Date();\n\n\n            // 解决 格式化grace时间对象的兼容问题\n            // update by yuhongping@jd.com 20160223\n            if (!(_date instanceof Date)) {\n                if (_date.date && _date.date instanceof Date) {\n                    _date = _date.date;\n                } else {\n                    throw new Error('第一个参数请传入时间类型！');\n                }\n            }\n\n            var returnVal = _pattern||_dateConfig.pattern_ymd;\n            returnVal = returnVal.replace(/yyyy|YYYY/,_date.getFullYear());\n            returnVal = returnVal.replace(/yy|YY/,(_date.getFullYear() % 100)>9?(_date.getFullYear() % 100).toString():'0' + (_date.getFullYear() % 100));\n            returnVal = returnVal.replace(/MM/,(_date.getMonth()+1)>9?(_date.getMonth()+1).toString():'0'+(_date.getMonth()+1));\n            returnVal = returnVal.replace(/M/g,_date.getMonth()+1);\n            returnVal = returnVal.replace(/w|W/g,_dateConfig.pattern_week_cn[_date.getDay()]);\n            returnVal = returnVal.replace(/dd|DD/,_date.getDate()>9?_date.getDate().toString():'0' + _date.getDate());\n            returnVal = returnVal.replace(/d|D/g,_date.getDate());\n            returnVal = returnVal.replace(/hh|HH/,_date.getHours()>9?_date.getHours().toString():'0' + _date.getHours());\n            returnVal = returnVal.replace(/h|H/g,_date.getHours());\n            returnVal = returnVal.replace(/mm/,_date.getMinutes()>9?_date.getMinutes().toString():'0' + _date.getMinutes());\n            returnVal = returnVal.replace(/m/g,_date.getMinutes());\n            returnVal = returnVal.replace(/ss|SS/,_date.getSeconds()>9?_date.getSeconds().toString():'0' + _date.getSeconds());\n            returnVal = returnVal.replace(/s|S/g,_date.getSeconds());\n            return returnVal;\n        };\n\n        /**\n         * 将数据转成千分位\n         * @param num 要转换的数字，可为整数或者浮点数\n         * @param dec 要保留的小数位\n         * @returns {string}\n         */\n        function formatThousands (num, dec) {\n            num = Number(num);\n            if (dec) {\n                num = num.toFixed(dec);\n            }\n            return (num + '').replace(/^[-\\+]?\\d+/, function (v) {\n                return v.replace(/\\d{1,3}(?=(\\d{3})+$)/g, '$&,');\n            });\n        }\n\n        var formatters = {\n\n            number:function(input, param){\n                input = parseFloat(input);\n                param = param || \"\";\n                var tmp = param.split(\"_\");\n\n                var res = formatThousands(input, tmp[0] || 0);\n                if(parseInt(tmp[1])){\n                    input > 0 && (res = \"+\"+res)\n                }\n                return res;\n            },\n\n            percent:function(input, param){\n                var multiply100;\n                if(param && (multiply100 = param.split(\"_\")[2]) && parseInt(multiply100)){\n                    input = parseFloat(input)*100;\n                }\n                return this.number(input,param)+tmpPercentCharactor;\n            },\n\n            date:function(input,param){\n                if(!param){\n                    return formatDate(input,tmpDateFormat);\n                }\n                else{\n                    return formatDate(input,param);\n                }\n            },\n\n            currency:function(input,param){\n                var tmp = param.split(\"_\")[1] || '￥';\n                //如果传过来的数据带有金钱符号 做容错处理\n                return input.toString().indexOf(tmp)>=0 ? input : tmp + this.number(input,param);\n                // if(!param){\n                //     return $filter(\"currency\")(input, tmpCurrency);\n                // }\n                // else{\n                //     return $filter(\"currency\")(input, param);\n                // }\n\n            },\n\n            limitTo:function(str, n){\n\n                if(!param) return input;\n\n                if(!str){\n                    return \"\";\n                }\n                var ilen = str.length;\n                if (ilen * 2 <= n) return str;\n                n -= 3;\n                var i = 0;\n                while (i < ilen && n > 0) {\n                    if (escape(str.charAt(i)).length > 4) n--;\n                    n--;\n                    i++;\n                }\n                if (n > 0 || (i == ilen && n == 0)) return str;\n                return str.substring(0, i) + \"...\";\n            \n            \n            },\n\n            typeCast:function(input,param){\n\n                switch(param){\n                    case \"i\":\n                        return parseInt(input);\n                    case 'f':\n                        return parseFloat(input);\n                    case 's':\n                        if(input instanceof Object) return JSON.stringify(input);\n                        return input+\"\";\n                    case 'o':\n                        return input && JSON.parse(input) || input;\n                    case 'b':\n                        if(input == 'true') return true;\n                        else if(input == 'false' || input == '0' || input == 'undefined' || input == 'null') return false;\n                        else return !!input;\n                    default :\n                        return input;\n                        break;\n                }\n\n            }\n\n        }\n\n        function valueFormatter(input,param){\n            if(input === null || input === '' || input === undefined){\n                return input;\n            }\n            var index = (param||\"\").indexOf(\"_\");\n\n            if(index == -1){\n                var type = param;\n                param = null;\n            }\n            else{\n                var type = param.substr(0,index);\n                param = param.substr(index+1);\n            }\n\n            if(formatters[type]){\n\n                return formatters[type](input,param);\n            }\n\n\n            return input;\n\n        }\n\n        return valueFormatter(input,param);\n\n   \n}\n\n\n\n/*\n\n <MySwitch list={list} currentValue={currentValue} onChange={this.onChangeList}/>\n <div>{currentValue}</div>\n\n数据结构\n{\n    list: [{text: '全部下单客户', value: 999999}, {text: '新下单客户', value: 0}, {text: '老下单客户', value: 1}],\n    currentValue:999999\n};\n */"
    }
  ]
}