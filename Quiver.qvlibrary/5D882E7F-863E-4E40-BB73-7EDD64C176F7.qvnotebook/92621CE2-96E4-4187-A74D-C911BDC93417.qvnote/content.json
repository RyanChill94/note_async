{
  "title": "For in/ Object Keys / for of",
  "cells": [
    {
      "type": "text",
      "data": "1. For in<div>对象及原型链的可枚举属性</div><div><div>遍历数组，会把数组的自定义或者原型链上的可枚举属性遍历出来</div><div>某些情况下顺序不一定</div></div><div><br></div><div>2.Object.keys</div><div>返回对象自身可枚举的属性组成的数组</div><div><br></div><div><br></div><div>3.for of</div><div>- es6 中添加的循环遍历语法</div><div>- 支持遍历数组 类数组对象（DOM NodeList）字符串 Map、Set</div><div>- 不支持遍历不同的对象</div><div>- 遍历后输出的结果为数组元素的val</div><div>- 可以搭配实例方法 entries() 同时输出数组的内容和索引</div>"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "// 1. 不会遍历到对象属性及其原型属性\nArray.prototype.getLength = function() {\n    return this.length;\n};\nvar arr = ['a', 'b', 'c'];\narr.name = 'June';\nObject.defineProperty(arr, 'age', {\n    enumerable: true,\n    value: 17,\n    writable: true,\n    configurable: true\n});\nfor(let i of arr) {\n    console.log(i); // a,b,c\n}\n\n// 2. 如果要遍历对象，可与 Object.keys 配合\nvar person = {\n    name: 'June',\n    age: 17,\n    city: 'guangzhou'\n}\nfor(var key of Object.keys(person)) {\n    console.log(person[key]); // June, 17, guangzhou\n}\n\n// 3. 配合 entries 输出数组索引和值/对象的键值\nvar arr = ['a', 'b', 'c'];\nfor(let [index, value] of Object.entries(arr)) {\n    console.log(index, ':', value);\n    // 0:a, 1:b, 2:c\n}\nvar obj = {name: 'June', age: 17, city: 'guangzhou'};\nfor(let [key, value] of Object.entries(obj)) {\n    console.log(key, ':', value);\n    // name:June,age:17,city:guangzhou\n}\n\n"
    }
  ]
}