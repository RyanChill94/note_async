{
  "title": "angular_meet_up",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "/*\n * use controllerAs syntax\n * 相当于给scope 设置命名空间\n * avoid floating variables\n */ \n\n\n/*\n * useage\n */\n\n<div ng-controller=\"MainCtrl as main\">\n    {{ main.title }}\n</div>\n\n/*\n * Nestde scopes\n * 嵌套作用域\n */\n\n// bad\n// confuse\n<div ng-controller=\"MainCtrl\">\n  {{ title }}\n  <div ng-controller=\"AnotherCtrl\">\n    {{ title }}\n    <div ng-controller=\"YetAnotherCtrl\">\n      {{ title }}\n    </div>\n  </div>\n</div>\n\n//good\n<div ng-controller=\"MainCtrl as main\">\n  {{ main.title }}\n  <div ng-controller=\"AnotherCtrl as another\">\n    {{ another.title }}\n    <div ng-controller=\"YetAnotherCtrl as yet\">\n      {{ yet.title }}\n    </div>\n  </div>\n</div>\n\n\n// 访问父级作用域\n\n// aweful\n<div ng-controller=\"MainCtrl\">\n  {{ title }}\n  <div ng-controller=\"AnotherCtrl\">\n    Scope title: {{ title }}\n    Parent title: {{ $parent.title }}\n    <div ng-controller=\"YetAnotherCtrl\">\n      {{ title }}\n      Parent title: {{ $parent.title }}\n      Parent parent title: {{ $parent.$parent.title }}\n    </div>\n  </div>\n</div>\n\n// clear\n<div ng-controller=\"MainCtrl as main\">\n  {{ main.title }}\n  <div ng-controller=\"AnotherCtrl as another\">\n    Scope title: {{ another.title }}\n    Parent title: {{ main.title }}\n    <div ng-controller=\"YetAnotherCtrl as yet\">\n      Scope title: {{ yet.title }}\n      Parent title: {{ another.title }}\n      Parent parent title: {{ main.title }}\n    </div>\n  </div>\n</div>\n\n\n// 作用域监听器或方法(像$watch, $broadcast, $on等等)\n// 还是必须注入$scope\n\napp.controller('MainCtrl', function ($scope) {\n  this.title = 'Some title';\n  $scope.$on('someEventFiredFromElsewhere', function (event, data) {\n    // do something!\n  });\n});\n\n// no working as expect \napp.controller('MainCtrl', function ($scope) {\n  this.title = 'Some title';\n  // doesn't work!\n  $scope.$watch('title', function (newVal, oldVal) {});\n  // doesn't work!\n  $scope.$watch('this.title', function (newVal, oldVal) {});\n});\n\n\n// 解决方案 绑定一个作用域\napp.controller('MainCtrl', function ($scope) {\n  this.title = 'Some title';\n  // boom\n  $scope.$watch(angular.bind(this, function () {\n    return this.title; // `this` IS the `this` above!!\n  }), function (newVal, oldVal) {\n    // now we will pickup changes to newVal and oldVal\n  });\n});\n\n/*\n * 在$routeProvider/Directives/elsewhere中声明\n * 不需要总是通过属性去绑定 ng-controller='mainControl as main'\n * directive provider 都提供了 controllerAs 属性去直接设置\n */\n \n app.directive('myDirective', function () {\n  return {\n    restrict: 'EA',\n    replace: true,\n    scope: true,\n    template: [].join(''),\n    controllerAs: '', // woohoo, nice and easy!\n    controller: function () {}, // we'll instantiate this controller \"as\" the above name\n    link: function () {}\n  };\n});\n"
    }
  ]
}