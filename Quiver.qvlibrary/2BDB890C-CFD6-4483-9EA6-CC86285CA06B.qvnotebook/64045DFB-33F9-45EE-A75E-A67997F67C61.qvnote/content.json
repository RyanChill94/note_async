{
  "title": "JS中浮点数运算",
  "cells": [
    {
      "type": "text",
      "data": ""
    },
    {
      "type": "text",
      "data": "因为<div><pre style=\"padding: 9.5px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin-top: 0px; margin-bottom: 10px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902); font-variant-ligatures: normal; orphans: 2; widows: 2;\"><code style=\"font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; font-size: 12px; color: inherit;\">十进制           二进制\n0.1              0.0001 1001 1001 1001 ...\n0.2              0.0011 0011 0011 0011 ...\n0.3              0.0100 1100 1100 1100 ...\n0.4              0.0110 0110 0110 0110 ...\n0.5              0.1\n0.6              0.1001 1001 1001 1001 …</code></pre><pre style=\"padding: 9.5px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin-top: 0px; margin-bottom: 10px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902); font-variant-ligatures: normal; orphans: 2; widows: 2;\"><span style=\"font-size: 12px;\">精度丢失</span></pre><pre style=\"padding: 9.5px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin-top: 0px; margin-bottom: 10px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902); font-variant-ligatures: normal; orphans: 2; widows: 2;\"><pre style=\"padding: 9.5px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin-top: 0px; margin-bottom: 10px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902); font-variant-ligatures: normal;\">​​输入               输出\n1.0-0.9 == 0.1     False\n1.0-0.8 == 0.2     False\n1.0-0.7 == 0.3     False\n1.0-0.6 == 0.4     True\n1.0-0.5 == 0.5     True\n1.0-0.4 == 0.6     True\n1.0-0.3 == 0.7     True\n1.0-0.2 == 0.8     True\n1.0-0.1 == 0.9     True<code></code></pre><pre style=\"padding: 9.5px; font-family: Monaco, Menlo, Consolas, &quot;Courier New&quot;, monospace; color: rgb(51, 51, 51); border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px; margin-top: 0px; margin-bottom: 10px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: rgb(245, 245, 245); border: 1px solid rgba(0, 0, 0, 0.14902); font-variant-ligatures: normal;\"><span style=\"font-size: 12px;\">solution</span></pre></pre></div>"
    },
    {
      "type": "code",
      "language": "javascript",
      "data": "// 通过isEqual工具方法判断数值是否相等\nfunction isEqual(number1, number2, digits){\n\tdigits = digits == undefined? 10: digits; // 默认精度为10\n\treturn number1.toFixed(digits) === number2.toFixed(digits);\n}\n\nisEqual(1.0-0.7, 0.3);  // return true\n\n// 原生扩展方式，更喜欢面向对象的风格\nNumber.prototype.isEqual = function(number, digits){\n\tdigits = digits == undefined? 10: digits; // 默认精度为10\n\treturn this.toFixed(digits) === number.toFixed(digits);\n}\n\n(1.0-0.7).isEqual(0.3); // return true"
    }
  ]
}